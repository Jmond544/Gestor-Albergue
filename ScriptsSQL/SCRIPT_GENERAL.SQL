/*
Eliminando tablas
*/

DROP TABLE Necessity;
DROP TABLE MaterialDonation;
DROP TABLE MonetaryDonation;
DROP TABLE Donor;
DROP TABLE Purchase;
DROP TABLE Supplier;
DROP TABLE VolunteerPatient;
DROP TABLE Volunteer;
DROP TABLE Medical_Exam;
DROP TABLE Patient;
DROP TABLE Clinic_History;
DROP TABLE Attorney;

ALTER TABLE Area
DROP CONSTRAINT fk_area_supervisor;

ALTER TABLE Employee
DROP CONSTRAINT fk_employee_area;

DROP TABLE Employee;
DROP TABLE Area;

/*
Creando tablas
*/

CREATE TABLE Attorney(
    idAttorney NUMBER(8) GENERATED BY DEFAULT AS IDENTITY,
    dniAttorney CHAR(8) UNIQUE,
    namesAttorney VARCHAR2(30) NOT NULL,
    surnamesAttorney VARCHAR2(30) NOT NULL,
    employmentSituation VARCHAR2(4) NOT NULL,
    civilStatus VARCHAR2(2) NOT NULL,
    socialConditions VARCHAR2(2) NOT NULL,
    levelStudy VARCHAR2(2) NOT NULL,
    CONSTRAINT pk_Attorney PRIMARY KEY (idAttorney),
    CONSTRAINT ck_civilStatus CHECK (civilStatus IN ('S','C','V','D')),
    CONSTRAINT ck_employmentSituation CHECK (employmentSituation IN ('EMP','DES')),
    CONSTRAINT ck_socialConditions CHECK (socialConditions IN ('A','B','C')),
    CONSTRAINT ck_levelStudy CHECK (levelStudy IN ('EB','BS', 'MS', 'PH'))
);

/*
CONSTRAINT ck_civilStatus CHECK (civilStatus IN ('S','C','V','D')):
    'S' (Soltero) 'C' (Casado) 'V' (viudo) 'D' (divorciado)

CONSTRAINT ck_socialConditions CHECK (socialConditions IN ('A','B','C')):
    'A', 'B' o 'C'.

CONSTRAINT ck_levelStudy CHECK (levelStudy IN ('EB', 'BS', 'MS', 'PH')):
    'EB' (Educacion básica), 'BS' (licenciatura), 'MS' (maestría) o 'PH' (doctorado).

CONSTRAINT ck_employmentSituation CHECK (employmentSituation IN ('EMP','DES')):
    'EMP' (empleado), 'DES' (desempleado)
*/

CREATE TABLE Clinic_History(
    idClinic_History NUMBER(8) GENERATED BY DEFAULT AS IDENTITY,
    updatedClinic_History VARCHAR2(3) NOT NULL,
    CONSTRAINT pk_Clinic_History PRIMARY KEY(idClinic_History),
    CONSTRAINT chk_updatedClinic_History CHECK(updatedClinic_History IN ('Yes', 'No'))
);

CREATE TABLE Patient(
    idPatient NUMBER(8) GENERATED BY DEFAULT AS IDENTITY,
    idAttorney NUMBER(8) NOT NULL,
    idClinic_History NUMBER(8) NOT NULL,
    dniPatient CHAR(8) NOT NULL,
    namesPatient VARCHAR2(30) NOT NULL,
    surnamesPatient VARCHAR2(30) NOT NULL,
    agePatient INT NOT NULL,
    diagnosis VARCHAR(25) NOT NULL,
    CONSTRAINT pk_Patient PRIMARY KEY(idPatient),
    CONSTRAINT fk_patient_attorney FOREIGN KEY(idAttorney)
    REFERENCES Attorney(idAttorney),
    CONSTRAINT fk_patient_clinic_history FOREIGN KEY(idClinic_History)
    REFERENCES Clinic_History(idClinic_History),
    CONSTRAINT chk_agePatient CHECK(agePatient >= 0 AND agePatient <= 120)
);

CREATE TABLE Medical_Exam (
    idMedical_Exam NUMBER(8) GENERATED BY DEFAULT AS IDENTITY,
    idPatient NUMBER(8) NOT NULL,
    typeExam VARCHAR2(25) NOT NULL,
    dateExam DATE NOT NULL,
    dateResults DATE NOT NULL,
    results VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_Medical_Exam PRIMARY KEY (idMedical_Exam),
    CONSTRAINT fk_medical_exam_patient FOREIGN KEY (idPatient)
        REFERENCES Patient(idPatient),
    CONSTRAINT chk_dateExam CHECK (dateExam >= TO_DATE('01/01/2023', 'DD/MM/YYYY')),
    CONSTRAINT chk_dateResults CHECK (dateResults >= dateExam)
);


CREATE TABLE Area(
    idArea NUMBER(8) GENERATED BY DEFAULT AS IDENTITY,
    idSupervisor NUMBER(8) NOT NULL,
    nameArea VARCHAR2(30) NOT NULL,
    descriptionArea VARCHAR2(50) NOT NULL,
    budgetArea DECIMAL(8, 2) NOT NULL,
    CONSTRAINT pk_Area PRIMARY KEY(idArea),
    CONSTRAINT chk_budgetArea CHECK (budgetArea > 0)
);

CREATE TABLE Employee(
    idEmployee NUMBER(8) GENERATED BY DEFAULT AS IDENTITY,
    idArea NUMBER(8) NOT NULL,
    surnamesEmployee VARCHAR2(25) NOT NULL,
    userName VARCHAR2(25) NOT NULL,
    password VARCHAR2(25) NOT NULL,
    mailContact VARCHAR2(25) NOT NULL,
    cellPhoneNumber VARCHAR2(25) NOT NULL,
    address VARCHAR2(50) NOT NULL,
    dateStartContract DATE NOT NULL,
    dateEndContract DATE NOT NULL,
    positionEmployee VARCHAR2(25) NOT NULL,
    salary DECIMAL(8, 2) NOT NULL,
    benefits VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_Employee PRIMARY KEY(idEmployee),
    CONSTRAINT fk_employee_area FOREIGN KEY(idArea)
    REFERENCES Area(idArea),
    CONSTRAINT chk_mialContact CHECK (mailContact LIKE '%.com'),
    CONSTRAINT chk_dateStartContract CHECK(dateStartContract >= TO_DATE('01/01/2000','DD/MM/YYYY')),
    CONSTRAINT chk_dateEndContract CHECK(dateEndContract >= dateStartContract),
    CONSTRAINT chk_salary CHECK (salary > 0)
);

-- despues
ALTER TABLE Area
ADD CONSTRAINT fk_area_supervisor FOREIGN KEY(idSupervisor)
    REFERENCES Employee(idEmployee);

CREATE TABLE Volunteer(
    idVolunteer NUMBER(8) GENERATED BY DEFAULT AS IDENTITY,
    idArea NUMBER(8) NOT NULL,
    dniVolunter CHAR(8) UNIQUE,
    namesVolunteer VARCHAR2(25) NOT NULL,
    surnamesVolunteer VARCHAR2(25) NOT NULL,
    mailContactVolunteer VARCHAR2(30) NOT NULL,
    cellPhoneNumberVolunteer CHAR(9) NOT NULL,
    addressVolunteer VARCHAR(50) NOT NULL,
    dateStart DATE NOT NULL,
    dateEnd DATE NOT NULL,
    skills VARCHAR2(50) NOT NULL,
    experience VARCHAR2(50) NOT NULL,
    hoursAvailability VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_Volunteer PRIMARY KEY(idVolunteer),
    CONSTRAINT fk_volunteer_area FOREIGN KEY(idArea)
    REFERENCES Area(idArea),
    CONSTRAINT chk_mailContactVolunteer CHECK (mailContactVolunteer LIKE '%.com'),
    CONSTRAINT chk_dateStart CHECK(dateStart >= TO_DATE('01/01/2000','DD/MM/YYYY')),
    CONSTRAINT chk_dateEnd CHECK(dateEnd >= dateStart)
);

CREATE TABLE VolunteerPatient(
    idVolunteer NUMBER(8),
    idPatient NUMBER(8),
    CONSTRAINT pk_VolunteerPatient PRIMARY KEY (idVolunteer,idPatient),
    CONSTRAINT fk_Relation_Volunteer FOREIGN KEY (idVolunteer) REFERENCES Volunteer(idVolunteer),
    CONSTRAINT fk_Relation_Patient FOREIGN KEY (idPatient) REFERENCES Patient(idPatient)
);

CREATE TABLE Supplier(
    idSupplier NUMBER(8) GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR2(20) NOT NULL,
    mailContact VARCHAR2(30) NOT NULL,
    cellPhoneNumber CHAR(9) NOT NULL,
    address VARCHAR2(50) NOT NULL,
    typeProduct VARCHAR2(15) NOT NULL,
    CONSTRAINT pk_Supplier PRIMARY KEY (idSupplier),
    CONSTRAINT ck_typeProduct CHECK (typeProduct IN ('Consumo','Material','Salud','Servicio'))
);

CREATE TABLE Purchase(
    idPurchase NUMBER(8) GENERATED BY DEFAULT AS IDENTITY,
    idArea NUMBER(8) NOT NULL,
    idSupplier NUMBER(8) NOT NULL,
    nameProduct VARCHAR2(20) NOT NULL,
    descriptionProduct VARCHAR2(30) NOT NULL,
    type VARCHAR2(15) NOT NULL,
    amount DECIMAL(6,2) NOT NULL,
    unitAmount DECIMAL(6,2) NOT NULL,
    CONSTRAINT pk_Purchase PRIMARY KEY (idPurchase),
    CONSTRAINT fk_Purchase_Area FOREIGN KEY (idArea) REFERENCES Area(idArea),
    CONSTRAINT fk_Purchase_Supplier FOREIGN KEY (idSupplier) REFERENCES Supplier(idSupplier),
    CONSTRAINT ck_type CHECK (type IN ('Consumo','Material','Salud','Servicio')),
    CONSTRAINT ck_amount CHECK (amount >= 0),
    CONSTRAINT ck_unitAmount CHECK (unitAmount >= 0)
);


CREATE TABLE Donor(
    idDonor NUMBER(8) GENERATED BY DEFAULT AS IDENTITY,
    nameDonor VARCHAR2(25),
    nicknameDonor VARCHAR2(25),
    mailContact VARCHAR2(30) NOT NULL,
    cellPhoneNumber CHAR(9) NOT NULL,
    Hero VARCHAR2(4) NOT NULL,
    categoryHero VARCHAR2(15),
    CONSTRAINT pk_Donor PRIMARY KEY (idDonor),
    CONSTRAINT ck_Hero_Donor CHECK(Hero IN ('Yes', 'No'))
);

CREATE TABLE MonetaryDonation(
    idMonetaryDonation NUMBER(8) GENERATED BY DEFAULT AS IDENTITY,
    idDonor NUMBER(8) NOT NULL,
    dateDonation DATE NOT NULL,
    methodDonation VARCHAR2(20) NOT NULL,
    amount DECIMAL(6,2) NOT NULL,
    comments VARCHAR2(40),
    status VARCHAR2(20) NOT NULL,
    CONSTRAINT pk_MonetaryDonation PRIMARY KEY (idMonetaryDonation),
    CONSTRAINT fk_MonetaryDonation_Donor FOREIGN KEY (idDonor) REFERENCES Donor(idDonor),
    CONSTRAINT ck_MonetaryDonation_methodDonation CHECK (methodDonation IN ('Efectivo','Cheque','T_Debito','T_Credito','Pago Móvil')),
    CONSTRAINT ck_MonetaryDonation_amount CHECK (amount >= 0),
    CONSTRAINT ck_MonetaryDonation_status CHECK (status IN ('Pendiente','Aprobado','Rechazado'))
);

/*
ck_amount: Esta restricción asegura que el valor del campo amount sea mayor o igual a cero, evitando donaciones con cantidades negativas.
ck_status: Esta restricción limita el valor del campo status a las opciones permitidas: 'Pendiente', 'Aprobado' o 'Rechazado'. Esto garantiza que el estado de la donación sea válido en la tabla.
*/

CREATE TABLE MaterialDonation(
    idDonationMaterial NUMBER(8) GENERATED BY DEFAULT AS IDENTITY,
    idDonor NUMBER(8) NOT NULL,
    idArea NUMBER(8) NOT NULL,
    dateDonation DATE NOT NULL,
    comments VARCHAR2(40) NOT NULL,
    type VARCHAR2(15) NOT NULL,
    amount DECIMAL(6,2) NOT NULL,
    status VARCHAR2(20) NOT NULL,
    CONSTRAINT pk_MaterialDonation PRIMARY KEY (idDonationMaterial),
    CONSTRAINT fk_MaterialDonation_Area FOREIGN KEY(idArea) REFERENCES Area(idArea),
    CONSTRAINT fk_MaterialDonation_Donor FOREIGN KEY (idDonor) REFERENCES Donor(idDonor),
    CONSTRAINT ck_MaterialDonation_Amount CHECK (amount > 0),
    CONSTRAINT ck_MaterialDonation_status CHECK (status IN ('Pendiente','Aprobado','Rechazado'))
);

CREATE TABLE Necessity(
    idNecessity NUMBER(8) GENERATED BY DEFAULT AS IDENTITY,
    idArea NUMBER(8) NOT NULL,
    idMonetaryDonation NUMBER(8) NOT NULL,
    description VARCHAR2(50) NOT NULL,
    dateRequest DATE NOT NULL,
    estimatedCost DECIMAL(10,2) NOT NULL,
    CONSTRAINT pk_Necessity PRIMARY KEY(idNecessity),
    CONSTRAINT fk_Necessity_Area FOREIGN KEY (idArea) REFERENCES Area(idArea),
    CONSTRAINT fk_Necessity_MonetaryDontion FOREIGN KEY (idMonetaryDonation) REFERENCES MonetaryDonation(idMonetaryDonation),
    CONSTRAINT chk_estimatedCost_positive CHECK (estimatedCost > 0)
);

/*
FUNCIONES
*/

CREATE OR REPLACE FUNCTION obtener_cantidad_pacientes RETURN NUMBER AS
  total_pacientes NUMBER;
BEGIN
  SELECT COUNT(*) INTO total_pacientes
  FROM Patient;
  
  RETURN total_pacientes;
END;
/

CREATE OR REPLACE FUNCTION obtener_cantidad_examenes RETURN NUMBER AS
  total_examenes NUMBER;
BEGIN
  SELECT COUNT(*) INTO total_examenes
  FROM Medical_Exam;
  
  RETURN total_examenes;
END;
/

CREATE OR REPLACE FUNCTION obtener_cantidad_voluntarios RETURN NUMBER AS
  total_voluntarios NUMBER;
BEGIN
  SELECT COUNT(*) INTO total_voluntarios
  FROM Volunteer;
  
  RETURN total_voluntarios;
END;
/

CREATE OR REPLACE FUNCTION obtener_cantidad_proveedores RETURN NUMBER AS
  total_proveedores NUMBER;
BEGIN
  SELECT COUNT(*) INTO total_proveedores
  FROM Supplier;
  
  RETURN total_proveedores;
END;
/

CREATE OR REPLACE FUNCTION obtener_cantidad_donaciones_monetarias RETURN NUMBER AS
  total_donaciones_monetarias NUMBER;
BEGIN
  SELECT COUNT(*) INTO total_donaciones_monetarias
  FROM MonetaryDonation;
  
  RETURN total_donaciones_monetarias;
END;
/

CREATE OR REPLACE FUNCTION obtener_monto_donaciones_monetarias RETURN DECIMAL AS
  total_donaciones_monetarias DECIMAL(10, 2);
BEGIN
  SELECT SUM(amount) INTO total_donaciones_monetarias
  FROM MonetaryDonation;
  
  RETURN total_donaciones_monetarias;
END;
/

CREATE OR REPLACE FUNCTION obtener_cantidad_donaciones_materiales RETURN NUMBER AS
  total_donaciones_materiales NUMBER;
BEGIN
  SELECT COUNT(*) INTO total_donaciones_materiales
  FROM MaterialDonation;
  
  RETURN total_donaciones_materiales;
END;
/

SELECT obtener_cantidad_pacientes() AS cantidad_pacientes FROM DUAL;
SELECT obtener_cantidad_examenes() AS cantidad_examenes FROM DUAL;
SELECT obtener_cantidad_voluntarios() AS cantidad_voluntarios FROM DUAL;
SELECT obtener_cantidad_proveedores() AS cantidad_proveedores FROM DUAL;
SELECT obtener_cantidad_donaciones_monetarias() AS cantidad_donaciones_monetarias FROM DUAL;
SELECT obtener_monto_donaciones_monetarias() AS monto_donaciones_monetarias FROM DUAL;
SELECT obtener_cantidad_donaciones_materiales() AS cantidad_donaciones_materiales FROM DUAL;

/*
PROCEDIMIENTOS
*/

CREATE OR REPLACE PROCEDURE obtener_cantidad_empleados_por_area AS
BEGIN
  FOR rec IN (SELECT a.nameArea, COUNT(e.idEmployee) AS total_empleados
              FROM Area a
              LEFT JOIN Employee e ON a.idArea = e.idArea
              GROUP BY a.nameArea)
  LOOP
    DBMS_OUTPUT.PUT_LINE('Área: ' || rec.nameArea || ', Cantidad de empleados: ' || rec.total_empleados);
  END LOOP;
END;
/

CREATE OR REPLACE PROCEDURE display_patient_history(p_idPatient IN NUMBER)
IS
   v_patient Patient%ROWTYPE;
   v_attorney Attorney%ROWTYPE;
   v_clinic_history Clinic_History%ROWTYPE;
BEGIN
   SELECT *
   INTO v_patient
   FROM Patient
   WHERE idPatient = p_idPatient;
   
   SELECT *
   INTO v_attorney
   FROM Attorney
   WHERE idAttorney = v_patient.idAttorney;
   
   SELECT *
   INTO v_clinic_history
   FROM Clinic_History
   WHERE idClinic_History = v_patient.idClinic_History;
   
   DBMS_OUTPUT.PUT_LINE('Patient ID: ' || v_patient.idPatient);
   DBMS_OUTPUT.PUT_LINE('Attorney: ' || v_attorney.namesAttorney || ' ' || v_attorney.surnamesAttorney);
   DBMS_OUTPUT.PUT_LINE('Clinic History Updated: ' || v_clinic_history.updatedClinic_History);
   
EXCEPTION
   WHEN NO_DATA_FOUND THEN
      DBMS_OUTPUT.PUT_LINE('Patient not found.');
END;
/

CREATE OR REPLACE PROCEDURE display_medical_exams(p_idPatient IN NUMBER)
IS
BEGIN
   FOR exam IN (SELECT * FROM Medical_Exam WHERE idPatient = p_idPatient)
   LOOP
      DBMS_OUTPUT.PUT_LINE('Exam ID: ' || exam.idMedical_Exam || ', Type: ' || exam.typeExam || ', Date: ' || exam.dateExam);
   END LOOP;
END;
/

CREATE OR REPLACE PROCEDURE display_employees_in_area(p_idArea IN NUMBER)
IS
BEGIN
   FOR employee IN (SELECT * FROM Employee WHERE idArea = p_idArea)
   LOOP
      DBMS_OUTPUT.PUT_LINE('Employee ID: ' || employee.idEmployee || ', Surnames: ' || employee.surnamesEmployee || ', Position: ' || employee.positionEmployee);
   END LOOP;
END;
/




SELECT * FROM ALL_TABLES WHERE OWNER = 'ALBERGUE';

ALTER SESSION SET "_ORACLE_SCRIPT" = true;

DROP ROLE Shelter_Manager;
DROP ROLE Shelter_Human_Resources;
DROP ROLE Shelter_Finance;
DROP ROLE Shelter_Procurement_Area;

/*
ROL DE ADMINISTRADOR DEL ALBERGUE
*/

CREATE ROLE Shelter_Manager NOT IDENTIFIED;
GRANT CREATE SESSION TO Shelter_Manager;
GRANT CREATE TABLE TO Shelter_Manager;
GRANT CREATE VIEW TO Shelter_Manager;
GRANT CREATE PROCEDURE TO Shelter_Manager;
GRANT CREATE SEQUENCE TO Shelter_Manager;
GRANT CREATE USER TO Shelter_Manager;
GRANT CREATE ROLE TO Shelter_Manager;
GRANT DROP USER TO Shelter_Manager;
GRANT GRANT ANY ROLE TO Shelter_Manager;

GRANT DROP ANY TABLE TO Shelter_Manager;
GRANT DROP ANY ROLE TO Shelter_Manager;

GRANT SELECT ON Attorney TO Shelter_Manager;
GRANT SELECT ON Clinic_History TO Shelter_Manager;
GRANT SELECT ON Patient TO Shelter_Manager;
GRANT SELECT ON Medical_Exam TO Shelter_Manager;
GRANT SELECT ON Area TO Shelter_Manager;
GRANT SELECT ON Employee TO Shelter_Manager;
GRANT SELECT ON Volunteer TO Shelter_Manager;
GRANT SELECT ON VolunteerPatient TO Shelter_Manager;
GRANT SELECT ON Supplier TO Shelter_Manager;
GRANT SELECT ON Purchase TO Shelter_Manager;
GRANT SELECT ON Donor TO Shelter_Manager;
GRANT SELECT ON MonetaryDonation TO Shelter_Manager;
GRANT SELECT ON MaterialDonation TO Shelter_Manager;
GRANT SELECT ON Necessity TO Shelter_Manager;

GRANT INSERT ON Attorney TO Shelter_Manager;
GRANT INSERT ON Clinic_History TO Shelter_Manager;
GRANT INSERT ON Patient TO Shelter_Manager;
GRANT INSERT ON Medical_Exam TO Shelter_Manager;
GRANT INSERT ON Area TO Shelter_Manager;
GRANT INSERT ON Employee TO Shelter_Manager;
GRANT INSERT ON Volunteer TO Shelter_Manager;
GRANT INSERT ON VolunteerPatient TO Shelter_Manager;
GRANT INSERT ON Supplier TO Shelter_Manager;
GRANT INSERT ON Purchase TO Shelter_Manager;
GRANT INSERT ON Donor TO Shelter_Manager;
GRANT INSERT ON MonetaryDonation TO Shelter_Manager;
GRANT INSERT ON MaterialDonation TO Shelter_Manager;
GRANT INSERT ON Necessity TO Shelter_Manager;

GRANT UPDATE ON Attorney TO Shelter_Manager;
GRANT UPDATE ON Clinic_History TO Shelter_Manager;
GRANT UPDATE ON Patient TO Shelter_Manager;
GRANT UPDATE ON Medical_Exam TO Shelter_Manager;
GRANT UPDATE ON Area TO Shelter_Manager;
GRANT UPDATE ON Employee TO Shelter_Manager;
GRANT UPDATE ON Volunteer TO Shelter_Manager;
GRANT UPDATE ON VolunteerPatient TO Shelter_Manager;
GRANT UPDATE ON Supplier TO Shelter_Manager;
GRANT UPDATE ON Purchase TO Shelter_Manager;
GRANT UPDATE ON Donor TO Shelter_Manager;
GRANT UPDATE ON MonetaryDonation TO Shelter_Manager;
GRANT UPDATE ON MaterialDonation TO Shelter_Manager;
GRANT UPDATE ON Necessity TO Shelter_Manager;

GRANT DELETE ON Attorney TO Shelter_Manager;
GRANT DELETE ON Clinic_History TO Shelter_Manager;
GRANT DELETE ON Patient TO Shelter_Manager;
GRANT DELETE ON Medical_Exam TO Shelter_Manager;
GRANT DELETE ON Area TO Shelter_Manager;
GRANT DELETE ON Employee TO Shelter_Manager;
GRANT DELETE ON Volunteer TO Shelter_Manager;
GRANT DELETE ON VolunteerPatient TO Shelter_Manager;
GRANT DELETE ON Supplier TO Shelter_Manager;
GRANT DELETE ON Purchase TO Shelter_Manager;
GRANT DELETE ON Donor TO Shelter_Manager;
GRANT DELETE ON MonetaryDonation TO Shelter_Manager;
GRANT DELETE ON MaterialDonation TO Shelter_Manager;
GRANT DELETE ON Necessity TO Shelter_Manager;

GRANT EXECUTE ON obtener_cantidad_empleados_por_area TO Shelter_Manager;
GRANT EXECUTE ON display_patient_history TO Shelter_Manager;
GRANT EXECUTE ON display_medical_exams TO Shelter_Manager;
GRANT EXECUTE ON display_employees_in_area TO Shelter_Manager;

GRANT EXECUTE ON obtener_cantidad_pacientes TO Shelter_Manager;
GRANT EXECUTE ON obtener_cantidad_examenes TO Shelter_Manager;
GRANT EXECUTE ON obtener_cantidad_voluntarios TO Shelter_Manager;
GRANT EXECUTE ON obtener_cantidad_proveedores TO Shelter_Manager;
GRANT EXECUTE ON obtener_cantidad_donaciones_monetarias TO Shelter_Manager;
GRANT EXECUTE ON obtener_monto_donaciones_monetarias TO Shelter_Manager;
GRANT EXECUTE ON obtener_cantidad_donaciones_materiales TO Shelter_Manager;


/*
Rol de Recursos Humanos
*/

CREATE ROLE Shelter_Human_Resources NOT IDENTIFIED;
GRANT CREATE SESSION TO Shelter_Human_Resources;

GRANT SELECT ON Attorney TO Shelter_Human_Resources;
GRANT SELECT ON Clinic_History TO Shelter_Human_Resources;
GRANT SELECT ON Patient TO Shelter_Human_Resources;
GRANT SELECT ON Medical_Exam TO Shelter_Human_Resources;
GRANT SELECT ON Area TO Shelter_Human_Resources;
GRANT SELECT ON Employee TO Shelter_Human_Resources;
GRANT SELECT ON Volunteer TO Shelter_Human_Resources;
GRANT SELECT ON VolunteerPatient TO Shelter_Human_Resources;

GRANT INSERT ON Attorney TO Shelter_Human_Resources;
GRANT INSERT ON Clinic_History TO Shelter_Human_Resources;
GRANT INSERT ON Patient TO Shelter_Human_Resources;
GRANT INSERT ON Medical_Exam TO Shelter_Human_Resources;
GRANT INSERT ON Area TO Shelter_Human_Resources;
GRANT INSERT ON Employee TO Shelter_Human_Resources;
GRANT INSERT ON Volunteer TO Shelter_Human_Resources;
GRANT INSERT ON VolunteerPatient TO Shelter_Human_Resources;

GRANT UPDATE ON Attorney TO Shelter_Human_Resources;
GRANT UPDATE ON Clinic_History TO Shelter_Human_Resources;
GRANT UPDATE ON Patient TO Shelter_Human_Resources;
GRANT UPDATE ON Medical_Exam TO Shelter_Human_Resources;
GRANT UPDATE ON Area TO Shelter_Human_Resources;
GRANT UPDATE ON Employee TO Shelter_Human_Resources;
GRANT UPDATE ON Volunteer TO Shelter_Human_Resources;
GRANT UPDATE ON VolunteerPatient TO Shelter_Human_Resources;

GRANT DELETE ON Attorney TO Shelter_Human_Resources;
GRANT DELETE ON Clinic_History TO Shelter_Human_Resources;
GRANT DELETE ON Patient TO Shelter_Human_Resources;
GRANT DELETE ON Medical_Exam TO Shelter_Human_Resources;
GRANT DELETE ON Area TO Shelter_Human_Resources;
GRANT DELETE ON Employee TO Shelter_Human_Resources;
GRANT DELETE ON Volunteer TO Shelter_Human_Resources;
GRANT DELETE ON VolunteerPatient TO Shelter_Human_Resources;

GRANT EXECUTE ON obtener_cantidad_empleados_por_area TO Shelter_Human_Resources;
GRANT EXECUTE ON display_patient_history TO Shelter_Human_Resources;
GRANT EXECUTE ON display_medical_exams TO Shelter_Human_Resources;
GRANT EXECUTE ON display_employees_in_area TO Shelter_Human_Resources;

GRANT EXECUTE ON obtener_cantidad_pacientes TO Shelter_Human_Resources;
GRANT EXECUTE ON obtener_cantidad_examenes TO Shelter_Human_Resources;
GRANT EXECUTE ON obtener_cantidad_voluntarios TO Shelter_Human_Resources;
GRANT EXECUTE ON obtener_cantidad_proveedores TO Shelter_Human_Resources;
GRANT EXECUTE ON obtener_cantidad_donaciones_monetarias TO Shelter_Human_Resources;
GRANT EXECUTE ON obtener_monto_donaciones_monetarias TO Shelter_Human_Resources;
GRANT EXECUTE ON obtener_cantidad_donaciones_materiales TO Shelter_Human_Resources;

/*
Rol de Finanzas
*/

CREATE ROLE Shelter_Finance NOT IDENTIFIED;
GRANT CREATE SESSION TO Shelter_Finance;

GRANT SELECT ON Area TO Shelter_Finance;
GRANT SELECT ON Employee TO Shelter_Finance;
GRANT SELECT ON Supplier TO Shelter_Finance;
GRANT SELECT ON Purchase TO Shelter_Finance;
GRANT SELECT ON Donor TO Shelter_Finance;
GRANT SELECT ON MonetaryDonation TO Shelter_Finance;
GRANT SELECT ON MaterialDonation TO Shelter_Finance;
GRANT SELECT ON Necessity TO Shelter_Finance;

GRANT INSERT ON Area TO Shelter_Finance;
GRANT INSERT ON Employee TO Shelter_Finance;
GRANT INSERT ON Supplier TO Shelter_Finance;
GRANT INSERT ON Purchase TO Shelter_Finance;
GRANT INSERT ON Donor TO Shelter_Finance;
GRANT INSERT ON MonetaryDonation TO Shelter_Finance;
GRANT INSERT ON MaterialDonation TO Shelter_Finance;
GRANT INSERT ON Necessity TO Shelter_Finance;

GRANT UPDATE ON Area TO Shelter_Finance;
GRANT UPDATE ON Employee TO Shelter_Finance;
GRANT UPDATE ON Supplier TO Shelter_Finance;
GRANT UPDATE ON Purchase TO Shelter_Finance;
GRANT UPDATE ON Donor TO Shelter_Finance;
GRANT UPDATE ON MonetaryDonation TO Shelter_Finance;
GRANT UPDATE ON MaterialDonation TO Shelter_Finance;
GRANT UPDATE ON Necessity TO Shelter_Finance;

GRANT DELETE ON Area TO Shelter_Finance;
GRANT DELETE ON Employee TO Shelter_Finance;
GRANT DELETE ON Supplier TO Shelter_Finance;
GRANT DELETE ON Purchase TO Shelter_Finance;
GRANT DELETE ON Donor TO Shelter_Finance;
GRANT DELETE ON MonetaryDonation TO Shelter_Finance;
GRANT DELETE ON MaterialDonation TO Shelter_Finance;
GRANT DELETE ON Necessity TO Shelter_Finance;

GRANT EXECUTE ON obtener_cantidad_empleados_por_area TO Shelter_Finance;
GRANT EXECUTE ON display_employees_in_area TO Shelter_Finance;

GRANT EXECUTE ON obtener_cantidad_pacientes TO Shelter_Finance;
GRANT EXECUTE ON obtener_cantidad_examenes TO Shelter_Finance;
GRANT EXECUTE ON obtener_cantidad_voluntarios TO Shelter_Finance;
GRANT EXECUTE ON obtener_cantidad_proveedores TO Shelter_Finance;
GRANT EXECUTE ON obtener_cantidad_donaciones_monetarias TO Shelter_Finance;
GRANT EXECUTE ON obtener_monto_donaciones_monetarias TO Shelter_Finance;
GRANT EXECUTE ON obtener_cantidad_donaciones_materiales TO Shelter_Finance;

/*
Rol de Área de Adquisiciones
*/

CREATE ROLE Shelter_Procurement_Area NOT IDENTIFIED;
GRANT CREATE SESSION TO Shelter_Procurement_Area;

GRANT SELECT ON Area TO Shelter_Procurement_Area;
GRANT SELECT ON Employee TO Shelter_Procurement_Area;
GRANT SELECT ON Supplier TO Shelter_Procurement_Area;
GRANT SELECT ON Purchase TO Shelter_Procurement_Area;
GRANT SELECT ON Donor TO Shelter_Procurement_Area;
GRANT SELECT ON MonetaryDonation TO Shelter_Procurement_Area;
GRANT SELECT ON MaterialDonation TO Shelter_Procurement_Area;
GRANT SELECT ON Necessity TO Shelter_Procurement_Area;

GRANT INSERT ON Area TO Shelter_Procurement_Area;
GRANT INSERT ON Employee TO Shelter_Procurement_Area;
GRANT INSERT ON Supplier TO Shelter_Procurement_Area;
GRANT INSERT ON Purchase TO Shelter_Procurement_Area;
GRANT INSERT ON Donor TO Shelter_Procurement_Area;
GRANT INSERT ON MonetaryDonation TO Shelter_Procurement_Area;
GRANT INSERT ON MaterialDonation TO Shelter_Procurement_Area;
GRANT INSERT ON Necessity TO Shelter_Procurement_Area;

GRANT UPDATE ON Area TO Shelter_Procurement_Area;
GRANT UPDATE ON Employee TO Shelter_Procurement_Area;
GRANT UPDATE ON Supplier TO Shelter_Procurement_Area;
GRANT UPDATE ON Purchase TO Shelter_Procurement_Area;
GRANT UPDATE ON Donor TO Shelter_Procurement_Area;
GRANT UPDATE ON MonetaryDonation TO Shelter_Procurement_Area;
GRANT UPDATE ON MaterialDonation TO Shelter_Procurement_Area;
GRANT UPDATE ON Necessity TO Shelter_Procurement_Area;

GRANT DELETE ON Area TO Shelter_Procurement_Area;
GRANT DELETE ON Employee TO Shelter_Procurement_Area;
GRANT DELETE ON Supplier TO Shelter_Procurement_Area;
GRANT DELETE ON Purchase TO Shelter_Procurement_Area;
GRANT DELETE ON Donor TO Shelter_Procurement_Area;
GRANT DELETE ON MonetaryDonation TO Shelter_Procurement_Area;
GRANT DELETE ON MaterialDonation TO Shelter_Procurement_Area;
GRANT DELETE ON Necessity TO Shelter_Procurement_Area;

GRANT EXECUTE ON obtener_cantidad_empleados_por_area TO Shelter_Procurement_Area;
GRANT EXECUTE ON display_employees_in_area TO Shelter_Procurement_Area;

GRANT EXECUTE ON obtener_cantidad_pacientes TO Shelter_Procurement_Area;
GRANT EXECUTE ON obtener_cantidad_examenes TO Shelter_Procurement_Area;
GRANT EXECUTE ON obtener_cantidad_voluntarios TO Shelter_Procurement_Area;
GRANT EXECUTE ON obtener_cantidad_proveedores TO Shelter_Procurement_Area;
GRANT EXECUTE ON obtener_cantidad_donaciones_monetarias TO Shelter_Procurement_Area;
GRANT EXECUTE ON obtener_monto_donaciones_monetarias TO Shelter_Procurement_Area;
GRANT EXECUTE ON obtener_cantidad_donaciones_materiales TO Shelter_Procurement_Area;

/*Observando los roles creados*/

SELECT * FROM dba_roles WHERE ROLE LIKE 'SHELTER%' ORDER BY ROLE;

/*Observando los roles correspondientes al usuario actual*/
SELECT USERNAME, GRANTED_ROLE
FROM USER_ROLE_PRIVS;

/*CREANDO USUARIOS*/
DROP USER JUAN;
CREATE USER JUAN IDENTIFIED BY 1234;
GRANT Shelter_Manager TO JUAN;

DROP USER FRANCISCO;
CREATE USER FRANCISCO IDENTIFIED BY 1234;
GRANT Shelter_Procurement_Area TO FRANCISCO;



/*
Attorney
*/

INSERT INTO Attorney (dniAttorney, namesAttorney, surnamesAttorney, employmentSituation, civilStatus, socialConditions, levelStudy)
VALUES ('12345678', 'Jhon', 'Doe', 'EMP', 'S', 'A', 'PH');

INSERT INTO Attorney (dniAttorney, namesAttorney, surnamesAttorney, employmentSituation, civilStatus, socialConditions, levelStudy)
VALUES ('98765432', 'Jane', 'Smith', 'DES', 'C', 'C', 'EB');

INSERT INTO Attorney (dniAttorney, namesAttorney, surnamesAttorney, employmentSituation, civilStatus, socialConditions, levelStudy)
VALUES ('56789012', 'Michael', 'Jhonson', 'EMP', 'V', 'B', 'MS');

INSERT INTO Attorney (dniAttorney, namesAttorney, surnamesAttorney, employmentSituation, civilStatus, socialConditions, levelStudy)
VALUES ('23456789', 'Emily', 'Anderson', 'EMP', 'S', 'A', 'PH');

INSERT INTO Attorney (dniAttorney, namesAttorney, surnamesAttorney, employmentSituation, civilStatus, socialConditions, levelStudy)
VALUES ('34567890', 'David', 'Williams', 'DES', 'S', 'C', 'EB');

INSERT INTO Attorney (dniAttorney, namesAttorney, surnamesAttorney, employmentSituation, civilStatus, socialConditions, levelStudy)
VALUES ('14568265', 'Santiago', 'Garcia', 'DES', 'C', 'C', 'EB');

INSERT INTO Attorney (dniAttorney, namesAttorney, surnamesAttorney, employmentSituation, civilStatus, socialConditions, levelStudy)
VALUES ('14754751', 'Valentina', 'Martinez', 'DES', 'C', 'B', 'BS');

INSERT INTO Attorney (dniAttorney, namesAttorney, surnamesAttorney, employmentSituation, civilStatus, socialConditions, levelStudy)
VALUES ('12535624', 'Mateo', 'Lopez', 'EMP', 'C', 'A', 'MS');

INSERT INTO Attorney (dniAttorney, namesAttorney, surnamesAttorney, employmentSituation, civilStatus, socialConditions, levelStudy)
VALUES ('98521659', 'Alejandro', 'Morales', 'EMP', 'S', 'A', 'MS');

INSERT INTO Attorney (dniAttorney, namesAttorney, surnamesAttorney, employmentSituation, civilStatus, socialConditions, levelStudy)
VALUES ('25364891', 'Leonardo', 'Castro', 'DES', 'C', 'C', 'BS');


/*
Clinic_History
*/

INSERT INTO Clinic_History (updatedClinic_History)
VALUES ('Yes');

INSERT INTO Clinic_History (updatedClinic_History)
VALUES ('Yes');

INSERT INTO Clinic_History (updatedClinic_History)
VALUES ('No');

INSERT INTO Clinic_History (updatedClinic_History)
VALUES ('Yes');

INSERT INTO Clinic_History (updatedClinic_History)
VALUES ('No');

INSERT INTO Clinic_History (updatedClinic_History)
VALUES ('Yes');

INSERT INTO Clinic_History (updatedClinic_History)
VALUES ('Yes');

INSERT INTO Clinic_History (updatedClinic_History)
VALUES ('No');

INSERT INTO Clinic_History (updatedClinic_History)
VALUES ('No');

INSERT INTO Clinic_History (updatedClinic_History)
VALUES ('Yes');

/*
Patient
*/

INSERT INTO Patient (idAttorney, idClinic_History, dniPatient, namesPatient, surnamesPatient, agePatient, diagNosis)
VALUES (1, 1, '87654321', 'Mark', 'Doe', 13, 'Cancer de pulmon');

INSERT INTO Patient (idAttorney, idClinic_History, dniPatient, namesPatient, surnamesPatient, agePatient, diagNosis)
VALUES (2, 2, '98765432', 'Jesus', 'Anderson', 12, 'Cancer de higado');

INSERT INTO Patient (idAttorney, idClinic_History, dniPatient, namesPatient, surnamesPatient, agePatient, diagNosis)
VALUES (3, 3, '12345678', 'Camila', 'Williams', 8, 'Leucemia');

INSERT INTO Patient (idAttorney, idClinic_History, dniPatient, namesPatient, surnamesPatient, agePatient, diagNosis)
VALUES (4, 4, '56789012', 'Sofia', 'Smith', 12, 'Leucemia');

INSERT INTO Patient (idAttorney, idClinic_History, dniPatient, namesPatient, surnamesPatient, agePatient, diagNosis)
VALUES (5, 5, '23456789', 'Jorge', 'Jhonson', 11, 'Cancer de higado');

INSERT INTO Patient (idAttorney, idClinic_History, dniPatient, namesPatient, surnamesPatient, agePatient, diagNosis)
VALUES (6, 6, '25836945', 'Diego', 'Garcia', 12, 'Cancer de riñon');

INSERT INTO Patient (idAttorney, idClinic_History, dniPatient, namesPatient, surnamesPatient, agePatient, diagNosis)
VALUES (7, 7, '45678952', 'Andres', 'Martinez', 15, 'Cancer estomago');

INSERT INTO Patient (idAttorney, idClinic_History, dniPatient, namesPatient, surnamesPatient, agePatient, diagNosis)
VALUES (8, 8, '15935786', 'Nicolas', 'Lopez', 13, 'Cancer de piel');

INSERT INTO Patient (idAttorney, idClinic_History, dniPatient, namesPatient, surnamesPatient, agePatient, diagNosis)
VALUES (9, 9, '14523685', 'Juan', 'Morales', 10, 'Cancer de piel');

INSERT INTO Patient (idAttorney, idClinic_History, dniPatient, namesPatient, surnamesPatient, agePatient, diagNosis)
VALUES (10, 10, '12596548', 'Mariana', 'Castro', 16, 'Cancer de pulmon');

/*
Medical_Exam
*/

INSERT INTO Medical_Exam (idPatient, typeExam, dateExam, dateResults, results)
VALUES (1, 'resonancia magnetica', TO_DATE('15/01/2023', 'DD/MM/YYYY'), TO_DATE('18/01/2023', 'DD/MM/YYYY'), 'Cancer de higado');

INSERT INTO Medical_Exam (idPatient, typeExam, dateExam, dateResults, results)
VALUES (2, 'ecografia', TO_DATE('10/03/2023', 'DD/MM/YYYY'), TO_DATE('15/08/2023', 'DD/MM/YYYY'), 'Cancer de higado');

INSERT INTO Medical_Exam (idPatient, typeExam, dateExam, dateResults, results)
VALUES (3, 'Analisis de sangre', TO_DATE('02/02/2023', 'DD/MM/YYYY'), TO_DATE('05/12/2023', 'DD/MM/YYYY'), 'Leucemia');

INSERT INTO Medical_Exam (idPatient, typeExam, dateExam, dateResults, results)
VALUES (4, 'Analisis de sangre', TO_DATE('01/01/2023', 'DD/MM/YYYY'), TO_DATE('05/01/2023', 'DD/MM/YYYY'), 'Leucemia');

INSERT INTO Medical_Exam (idPatient, typeExam, dateExam, dateResults, results)
VALUES (5, 'radiografia', TO_DATE('10/02/2023', 'DD/MM/YYYY'), TO_DATE('12/02/2023', 'DD/MM/YYYY'), 'Cancer de pulmon');

INSERT INTO Medical_Exam (idPatient, typeExam, dateExam, dateResults, results)
VALUES (6, 'tomografia', TO_DATE('25/05/2023', 'DD/MM/YYYY'), TO_DATE('27/05/2023', 'DD/MM/YYYY'), 'Cancer de riñon');

INSERT INTO Medical_Exam (idPatient, typeExam, dateExam, dateResults, results)
VALUES (7, 'biopsia', TO_DATE('22/01/2023', 'DD/MM/YYYY'), TO_DATE('25/06/2023', 'DD/MM/YYYY'), 'Cancer de piel');

INSERT INTO Medical_Exam (idPatient, typeExam, dateExam, dateResults, results)
VALUES (8, 'biopsia', TO_DATE('07/02/2023', 'DD/MM/YYYY'), TO_DATE('10/07/2023', 'DD/MM/YYYY'), 'Cancer de piel');

INSERT INTO Medical_Exam (idPatient, typeExam, dateExam, dateResults, results)
VALUES (9, 'tomografia', TO_DATE('01/01/2023', 'DD/MM/YYYY'), TO_DATE('04/01/2023', 'DD/MM/YYYY'), 'Cancer de pulmon');

INSERT INTO Medical_Exam (idPatient, typeExam, dateExam, dateResults, results)
VALUES (10, 'laparoscopia', TO_DATE('21/2/2023', 'DD/MM/YYYY'), TO_DATE('23/12/2023', 'DD/MM/YYYY'), 'Cancer estomago');

/*
AREA - EMPLEADO
*/

ALTER TABLE Area
DISABLE CONSTRAINT fk_area_supervisor;

INSERT INTO Area (idSupervisor, nameArea, descriptionArea, budgetArea)
VALUES (1, 'Shelter_Manager', 'Encargado del manejo general del refugio', 50000.00);

INSERT INTO Area (idSupervisor, nameArea, descriptionArea, budgetArea)
VALUES (2, 'Shelter_Human_Resources', 'Encargado de los recursos humanos del refugio', 30000.00);

INSERT INTO Area (idSupervisor, nameArea, descriptionArea, budgetArea)
VALUES (3, 'Shelter_Finance', 'Encargado de las finanzas y contabilidad', 40000.00);

INSERT INTO Area (idSupervisor, nameArea, descriptionArea, budgetArea)
VALUES (4, 'Shelter_Procurement_Area', 'Encargado de las compras y adquisiciones', 20000.00);


-- Insertar empleado en el área "Shelter_Manager"
INSERT INTO Employee (idArea, surnamesEmployee, userName, password, mailContact, cellPhoneNumber, address, dateStartContract, dateEndContract, positionEmployee, salary, benefits)
VALUES (1, 'Apellido1', 'Usuario1', 'Contraseña1', 'correo1@example.com', '123456789', 'Dirección1', TO_DATE('01/01/2022', 'DD/MM/YYYY'), TO_DATE('31/12/2022', 'DD/MM/YYYY'), 'Posición1', 5000.00, 'Beneficios1');

-- Insertar empleado en el área "Shelter_Human_Resources"
INSERT INTO Employee (idArea, surnamesEmployee, userName, password, mailContact, cellPhoneNumber, address, dateStartContract, dateEndContract, positionEmployee, salary, benefits)
VALUES (2, 'Apellido2', 'Usuario2', 'Contraseña2', 'correo2@example.com', '987654321', 'Dirección2', TO_DATE('01/01/2022', 'DD/MM/YYYY'), TO_DATE('31/12/2022', 'DD/MM/YYYY'), 'Posición2', 6000.00, 'Beneficios2');

-- Insertar empleado en el área "Shelter_Finance"
INSERT INTO Employee (idArea, surnamesEmployee, userName, password, mailContact, cellPhoneNumber, address, dateStartContract, dateEndContract, positionEmployee, salary, benefits)
VALUES (3, 'Apellido3', 'Usuario3', 'Contraseña3', 'correo3@example.com', '123123123', 'Dirección3', TO_DATE('01/01/2022', 'DD/MM/YYYY'), TO_DATE('31/12/2022', 'DD/MM/YYYY'), 'Posición3', 7000.00, 'Beneficios3');

-- Insertar empleado en el área "Shelter_Procurement_Area"
INSERT INTO Employee (idArea, surnamesEmployee, userName, password, mailContact, cellPhoneNumber, address, dateStartContract, dateEndContract, positionEmployee, salary, benefits)
VALUES (4, 'Apellido4', 'Usuario4', 'Contraseña4', 'correo4@example.com', '456789123', 'Dirección4', TO_DATE('01/01/2022', 'DD/MM/YYYY'), TO_DATE('31/12/2022', 'DD/MM/YYYY'), 'Posición4', 8000.00, 'Beneficios4');

ALTER TABLE Area
ENABLE CONSTRAINT fk_area_supervisor;

INSERT INTO Volunteer (idArea, dniVolunter, namesVolunteer, surnamesVolunteer, mailContactVolunteer, cellPhoneNumberVolunteer, addressVolunteer, dateStart, dateEnd, skills, experience, hoursAvailability)
VALUES (1, '5682489', 'Alejandro', 'Fernandez', 'Alejandro_Fernadez@gmail.com', '986452189', 'Carrera del sol 232', TO_DATE('01/06/2020', 'DD/MM/YYYY'), TO_DATE('30/11/2022', 'DD/MM/YYYY'), 'proactivo, colaborativo', '12 meses', '2000');

INSERT INTO Volunteer (idArea, dniVolunter, namesVolunteer, surnamesVolunteer, mailContactVolunteer, cellPhoneNumberVolunteer, addressVolunteer, dateStart, dateEnd, skills, experience, hoursAvailability)
VALUES (2, '26458736', 'Sofia', 'Guzman', 'Sofia_Guzmadez@gmail.com', '965382156', 'Calle los tulipanes 25', TO_DATE('15/01/2022', 'DD/MM/YYYY'), TO_DATE('30/10/2022', 'DD/MM/YYYY'), 'trabajo en equipo', 'No tiene', '900');

INSERT INTO Volunteer (idArea, dniVolunter, namesVolunteer, surnamesVolunteer, mailContactVolunteer, cellPhoneNumberVolunteer, addressVolunteer, dateStart, dateEnd, skills, experience, hoursAvailability)
VALUES (3, '65823957', 'Daniel', 'Garcia', 'Daniel_Garcidez@gmail.com', '958626359', 'Calle mauricio hosh 50', TO_DATE('01/02/2023', 'DD/MM/YYYY'), TO_DATE('30/04/2023', 'DD/MM/YYYY'), 'pensamiento analitico', '6 meses', '100');

INSERT INTO Volunteer (idArea, dniVolunter, namesVolunteer, surnamesVolunteer, mailContactVolunteer, cellPhoneNumberVolunteer, addressVolunteer, dateStart, dateEnd, skills, experience, hoursAvailability)
VALUES (4, '25648125', 'Rafael', 'Castro', 'Rafael_Castrdez@gmail.com', '957482659', 'Calle las begonias 111', TO_DATE('15/12/2022', 'DD/MM/YYYY'), TO_DATE('30/06/2023', 'DD/MM/YYYY'), 'Liderazgo', 'no tiene', '450');

INSERT INTO Volunteer (idArea, dniVolunter, namesVolunteer, surnamesVolunteer, mailContactVolunteer, cellPhoneNumberVolunteer, addressVolunteer, dateStart, dateEnd, skills, experience, hoursAvailability)
VALUES (1, '25639899', 'Pedro', 'Silva', 'Pedro_Silvadez@gmail.com', '958625419', 'Jr Real 329', TO_DATE('15/11/2022', 'DD/MM/YYYY'), TO_DATE('30/03/2023', 'DD/MM/YYYY'), 'Creatividad', 'no tiene', '280');

INSERT INTO Volunteer (idArea, dniVolunter, namesVolunteer, surnamesVolunteer, mailContactVolunteer, cellPhoneNumberVolunteer, addressVolunteer, dateStart, dateEnd, skills, experience, hoursAvailability)
VALUES (2, '56587455', 'Carlos', 'Rios', 'Carlos_dez@gmail.com', '952351246', 'Breña 148', TO_DATE('28/02/2023', 'DD/MM/YYYY'), TO_DATE('30/05/2023', 'DD/MM/YYYY'), 'Pensamiento critico', '8 meses', '250');

INSERT INTO Volunteer (idArea, dniVolunter, namesVolunteer, surnamesVolunteer, mailContactVolunteer, cellPhoneNumberVolunteer, addressVolunteer, dateStart, dateEnd, skills, experience, hoursAvailability)
VALUES (3, '25663212', 'Natalia', 'Gomez', 'Natalia_Gomezdez@gmail.com', '958621456', 'La victoria 121', TO_DATE('01/01/2023', 'DD/MM/YYYY'), TO_DATE('15/03/2023', 'DD/MM/YYYY'), 'trabajo en equipo', 'no tiene', '200');

INSERT INTO Volunteer (idArea, dniVolunter, namesVolunteer, surnamesVolunteer, mailContactVolunteer, cellPhoneNumberVolunteer, addressVolunteer, dateStart, dateEnd, skills, experience, hoursAvailability)
VALUES (4, '24589986', 'Andres', 'Delgado', 'Andres_Delgadez@gmail.com', '985672536', 'San Luis 255', TO_DATE('18/11/2022', 'DD/MM/YYYY'), TO_DATE('30/05/2023', 'DD/MM/YYYY'), 'comunicación efectiva', '3 meses', '400');

INSERT INTO Volunteer (idArea, dniVolunter, namesVolunteer, surnamesVolunteer, mailContactVolunteer, cellPhoneNumberVolunteer, addressVolunteer, dateStart, dateEnd, skills, experience, hoursAvailability)
VALUES (1, '25647758', 'Ana', 'sanchez', 'Ana_sanchdez@gmail.com', '986142025', 'Surco 132', TO_DATE('28/02/2023', 'DD/MM/YYYY'), TO_DATE('30/06/2023', 'DD/MM/YYYY'), 'Pensamiento critico', 'no tiene', '350');

INSERT INTO Volunteer (idArea, dniVolunter, namesVolunteer, surnamesVolunteer, mailContactVolunteer, cellPhoneNumberVolunteer, addressVolunteer, dateStart, dateEnd, skills, experience, hoursAvailability)
VALUES (2, '58624895', 'Andrea', 'Cruz', 'Andrea_dez@gmail.com', '952140368', 'Wilson 88', TO_DATE('28/02/2023', 'DD/MM/YYYY'), TO_DATE('30/06/2023', 'DD/MM/YYYY'), 'Liderazgo', 'no tiene', '300');

INSERT INTO VolunteerPatient (idVolunteer, idPatient)
VALUES (1, 1);

INSERT INTO VolunteerPatient (idVolunteer, idPatient)
VALUES (2, 2);

INSERT INTO VolunteerPatient (idVolunteer, idPatient)
VALUES (3, 3);

INSERT INTO VolunteerPatient (idVolunteer, idPatient)
VALUES (4, 4);

INSERT INTO VolunteerPatient (idVolunteer, idPatient)
VALUES (5, 5);

INSERT INTO VolunteerPatient (idVolunteer, idPatient)
VALUES (6, 6);

INSERT INTO VolunteerPatient (idVolunteer, idPatient)
VALUES (7, 7);

INSERT INTO VolunteerPatient (idVolunteer, idPatient)
VALUES (8, 8);

INSERT INTO VolunteerPatient (idVolunteer, idPatient)
VALUES (9, 9);

INSERT INTO VolunteerPatient (idVolunteer, idPatient)
VALUES (10, 10);

INSERT INTO Supplier (name, mailContact, cellPhoneNumber, address, typeProduct)
VALUES ('fabricacion alfa', 'alfa.1975@gmail.com', '95230156', 'av colonial S/N', 'Material');

INSERT INTO Supplier (name, mailContact, cellPhoneNumber, address, typeProduct)
VALUES ('Industria JM', 'IndustriaJM@gmail.com', '941025103', 'calle san juan 329', 'Material');

INSERT INTO Supplier (name, mailContact, cellPhoneNumber, address, typeProduct)
VALUES ('corporacion energy', 'energy@gmail.com', '989520167', 'Jr. Lima 123', 'Salud');

INSERT INTO Supplier (name, mailContact, cellPhoneNumber, address, typeProduct)
VALUES ('Soluciones xyz', 'soluXYZ@gmail.com', '978410659', 'Jr. Ayacucho 654', 'Material');

INSERT INTO Supplier (name, mailContact, cellPhoneNumber, address, typeProduct)
VALUES ('Industria delCampo', 'delCampo@gmail.com', '978410965', 'AV Nicolas de pierola S/N', 'Consumo');

INSERT INTO Supplier (name, mailContact, cellPhoneNumber, address, typeProduct)
VALUES ('Compania saludyVIda', 'saludyVida@gmail.com', '978954203', 'Breña 325', 'Salud');

INSERT INTO Supplier (name, mailContact, cellPhoneNumber, address, typeProduct)
VALUES ('Industrias GM', 'IndustriasGM@gmail.com', '985012456', 'AV Brasil 158', 'Material');

INSERT INTO Supplier (name, mailContact, cellPhoneNumber, address, typeProduct)
VALUES ('Industrias Asia', 'labAmoryPaz@gmail.com', '900578424', 'Puente piedra 152', 'Material');

INSERT INTO Supplier (name, mailContact, cellPhoneNumber, address, typeProduct)
VALUES ('Corporacion Andina', 'Andina.75@gmail.com', '985475123', 'San miguel 142', 'Material');

INSERT INTO Supplier (name, mailContact, cellPhoneNumber, address, typeProduct)
VALUES ('Industrias CyM', 'IndCyM@gmail.com', '985206401', 'La victoria 147', 'Material');

INSERT INTO Purchase (idArea, idSupplier, nameProduct, descriptionProduct, type, amount, unitAmount)
VALUES (1, 1, 'Papel', 'Papel de oficina', 'Consumo', 100, 5.99);

INSERT INTO Purchase (idArea, idSupplier, nameProduct, descriptionProduct, type, amount, unitAmount)
VALUES (1, 2, 'Tóner', 'Tóner para impresoras', 'Material', 10, 29.99);

INSERT INTO Purchase (idArea, idSupplier, nameProduct, descriptionProduct, type, amount, unitAmount)
VALUES (1, 3, 'Pastillas', 'Medicamentos', 'Salud', 50, 1.99);

INSERT INTO Purchase (idArea, idSupplier, nameProduct, descriptionProduct, type, amount, unitAmount)
VALUES (1, 4, 'Carpetas', 'Carpetas de archivo', 'Servicio', 20, 3.49);

INSERT INTO Donor (nameDonor, nicknameDonor, mailContact, cellPhoneNumber, Hero, categoryHero)
VALUES ('Jorge', 'EL campeon', 'jorge.98@gmail.com', '958624518', 'Yes', 'Héroe 5');

INSERT INTO Donor (nameDonor, nicknameDonor, mailContact, cellPhoneNumber, Hero, categoryHero)
VALUES ('Sarai', 'La dama de fuego', 'sarai@gmail.com', '953698254', 'No', null);

INSERT INTO Donor (nameDonor, nicknameDonor, mailContact, cellPhoneNumber, Hero, categoryHero)
VALUES ('Lucas', 'El campeon', 'lucas@gmail.com', '958621495', 'Yes', 'Héroe 19');

INSERT INTO Donor (nameDonor, nicknameDonor, mailContact, cellPhoneNumber, Hero, categoryHero)
VALUES ('Marcos', 'El guerrero', 'marcoos@gmail.com', '952306410', 'No', null);

INSERT INTO Donor (nameDonor, nicknameDonor, mailContact, cellPhoneNumber, Hero, categoryHero)
VALUES ('Angela', 'EL maestro', 'angela_00@gmail.com', '921065487', 'Yes', 'Héroe 30');

INSERT INTO Donor (nameDonor, nicknameDonor, mailContact, cellPhoneNumber, Hero, categoryHero)
VALUES ('Sheyla', 'La estrella', 'sheyla@gmail.com', '953216048', 'Yes', 'Héroe 60');

INSERT INTO Donor (nameDonor, nicknameDonor, mailContact, cellPhoneNumber, Hero, categoryHero)
VALUES ('Lucio', 'El vendaval', 'lucio22@gmail.com', '952036250', 'No', null);

INSERT INTO Donor (nameDonor, nicknameDonor, mailContact, cellPhoneNumber, Hero, categoryHero)
VALUES ('Jhostin', 'EL conquistador', 'jhostin@gmail.com', '95621087', 'Yes', 'Héroe 100');

INSERT INTO Donor (nameDonor, nicknameDonor, mailContact, cellPhoneNumber, Hero, categoryHero)
VALUES ('Maria', 'La reina', 'mariaL@gmail.com', '954203621', 'Yes', 'Héroe (Otros)');

INSERT INTO Donor (nameDonor, nicknameDonor, mailContact, cellPhoneNumber, Hero, categoryHero)
VALUES ('Ariana', 'La perla', 'ariana@gmail.com', '950065487', 'Yes', 'Héroe 5');


INSERT INTO MonetaryDonation (idDonor, dateDonation, methodDonation, amount, comments, status)
VALUES (1, TO_DATE('10/01/2023', 'DD/MM/YYYY'), 'Efectivo', 100.00, 'Dar lo poco que se tiene', 'Aprobado');

INSERT INTO MonetaryDonation (idDonor, dateDonation, methodDonation, amount, comments, status)
VALUES (2, TO_DATE('15/02/2023', 'DD/MM/YYYY'), 'Cheque', 500.50, 'Aportar con mi grano de arena', 'Pendiente');

INSERT INTO MonetaryDonation (idDonor, dateDonation, methodDonation, amount, comments, status)
VALUES (3, TO_DATE('05/03/2023', 'DD/MM/YYYY'), 'T_Debito', 750.25, 'Todo sea por los mas necesitados', 'Aprobado');

INSERT INTO MonetaryDonation (idDonor, dateDonation, methodDonation, amount, comments, status)
VALUES (4, TO_DATE('02/04/2023', 'DD/MM/YYYY'), 'T_Credito', 300.75, 'Dar lo poco que se tiene', 'Aprobado');

INSERT INTO MonetaryDonation (idDonor, dateDonation, methodDonation, amount, comments, status)
VALUES (5, TO_DATE('08/05/2023', 'DD/MM/YYYY'), 'Pago Móvil', 90.00, 'Aportar con mi grano de arena', 'Pendiente');

INSERT INTO MonetaryDonation (idDonor, dateDonation, methodDonation, amount, comments, status)
VALUES (6, TO_DATE('03/06/2023', 'DD/MM/YYYY'), 'Efectivo', 250.50, 'Dar lo poco que se tiene', 'Aprobado');

INSERT INTO MonetaryDonation (idDonor, dateDonation, methodDonation, amount, comments, status)
VALUES (7, TO_DATE('06/07/2023', 'DD/MM/YYYY'), 'Cheque', 1200.00, 'Aportar con mi grano de arena', 'Rechazado');

INSERT INTO MonetaryDonation (idDonor, dateDonation, methodDonation, amount, comments, status)
VALUES (8, TO_DATE('12/08/2023', 'DD/MM/YYYY'), 'T_Debito', 800.25, 'Todo sea por los mas necesitados', 'Pendiente');

INSERT INTO MonetaryDonation (idDonor, dateDonation, methodDonation, amount, comments, status)
VALUES (9, TO_DATE('20/09/2023', 'DD/MM/YYYY'), 'T_Credito', 400.50, 'Dar lo poco que se tiene', 'Aprobado');

INSERT INTO MonetaryDonation (idDonor, dateDonation, methodDonation, amount, comments, status)
VALUES (10, TO_DATE('25/10/2023', 'DD/MM/YYYY'), 'Pago Móvil', 1500.00, 'Aportar con mi grano de arena', 'Pendiente');

INSERT INTO MaterialDonation (idDonor, idArea, dateDonation, comments, type, amount, status)
VALUES (1, 3, TO_DATE('12/01/2023', 'DD/MM/YYYY'), 'Ropa nueva con etiqueta', 'Ropa', 10, 'Aprobado');

INSERT INTO MaterialDonation (idDonor, idArea, dateDonation, comments, type, amount, status)
VALUES (2, 4, TO_DATE('10/12/2022', 'DD/MM/YYYY'), 'sillon', 'Mueble', 2, 'Pendiente');

INSERT INTO MaterialDonation (idDonor, idArea, dateDonation, comments, type, amount, status)
VALUES (3, 1, TO_DATE('01/10/2022', 'DD/MM/YYYY'), 'Ropa variada para niñas', 'Ropa', 20, 'Aprobado');

INSERT INTO MaterialDonation (idDonor, idArea, dateDonation, comments, type, amount, status)
VALUES (4, 3, TO_DATE('25/03/2022', 'DD/MM/YYYY'), 'carros y muñecos', 'Juguetes', 100, 'Rechazado');

INSERT INTO MaterialDonation (idDonor, idArea, dateDonation, comments, type, amount, status)
VALUES (5, 1, TO_DATE('05/03/2023', 'DD/MM/YYYY'), 'Cocina', 'Electrodoméstico', 1, 'Rechazado');

INSERT INTO MaterialDonation (idDonor, idArea, dateDonation, comments, type, amount, status)
VALUES (6, 1, TO_DATE('30/11/2022', 'DD/MM/YYYY'), 'mesa', 'Mueble', 15, 'Aprobado');

INSERT INTO MaterialDonation (idDonor, idArea, dateDonation, comments, type, amount, status)
VALUES (7, 3, TO_DATE('26/10/2022', 'DD/MM/YYYY'), 'Juguetes para niños en buen estado', 'Juguetes', 50, 'Pendiente');

INSERT INTO MaterialDonation (idDonor, idArea, dateDonation, comments, type, amount, status)
VALUES (8, 3, TO_DATE('05/01/2023', 'DD/MM/YYYY'), 'Ropas en buen estado.', 'Ropa', 15, 'Pendiente');

INSERT INTO MaterialDonation (idDonor, idArea, dateDonation, comments, type, amount, status)
VALUES (9, 4, TO_DATE('18/03/2023', 'DD/MM/YYYY'), 'sillas', 'Mueble', 25, 'Aprobado');

INSERT INTO MaterialDonation (idDonor, idArea, dateDonation, comments, type, amount, status)
VALUES (10, 4, TO_DATE('11/09/2022', 'DD/MM/YYYY'), 'camas', 'Mueble', 2, 'Aprobado');

INSERT INTO Necessity (idArea, idMonetaryDonation, description, dateRequest, estimatedCost)
VALUES (1, 1, 'Alimentos', TO_DATE('15/01/2023', 'DD/MM/YYYY'), 1000.00);

INSERT INTO Necessity (idArea, idMonetaryDonation, description, dateRequest, estimatedCost)
VALUES (2, 3, 'Capacitacion', TO_DATE('20/02/2023', 'DD/MM/YYYY'), 500.50);

INSERT INTO Necessity (idArea, idMonetaryDonation, description, dateRequest, estimatedCost)
VALUES (3, 3, 'Capacitacion', TO_DATE('10/03/2023', 'DD/MM/YYYY'), 750.25);

INSERT INTO Necessity (idArea, idMonetaryDonation, description, dateRequest, estimatedCost)
VALUES (4, 4, 'Gasto funcionamiento', TO_DATE('05/04/2023', 'DD/MM/YYYY'), 300.75);

INSERT INTO Necessity (idArea, idMonetaryDonation, description, dateRequest, estimatedCost)
VALUES (1, 1, 'Alimentos', TO_DATE('12/05/2023', 'DD/MM/YYYY'), 900.00);

INSERT INTO Necessity (idArea, idMonetaryDonation, description, dateRequest, estimatedCost)
VALUES (2, 3, 'Materiales de trabajo', TO_DATE('01/06/2023', 'DD/MM/YYYY'), 250.50);

INSERT INTO Necessity (idArea, idMonetaryDonation, description, dateRequest, estimatedCost)
VALUES (3, 3, 'Capacitacion', TO_DATE('08/07/2023', 'DD/MM/YYYY'), 1200.00);

INSERT INTO Necessity (idArea, idMonetaryDonation, description, dateRequest, estimatedCost)
VALUES (4, 4, 'Gasto funcionamiento', TO_DATE('15/08/2023', 'DD/MM/YYYY'), 800.25);

INSERT INTO Necessity (idArea, idMonetaryDonation, description, dateRequest, estimatedCost)
VALUES (1, 1, 'Alimentos', TO_DATE('25/09/2023', 'DD/MM/YYYY'), 400.50);

INSERT INTO Necessity (idArea, idMonetaryDonation, description, dateRequest, estimatedCost)
VALUES (2, 2, 'Gasto funcionamiento', TO_DATE('30/10/2023', 'DD/MM/YYYY'), 1500.0);


